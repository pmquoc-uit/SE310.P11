services:
  # api:
  #   container_name: api
  #   build:
  #     context: .
  #     dockerfile: API/Dockerfile
  #   ports:
  #     - "5000:8080"
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: "Production"
  #     POSTGRES-NEON: Host=ep-rough-cherry-a1bus5hg.ap-southeast-1.aws.neon.tech;Port=5432;Database=neondb;Username=neondb_owner;Password=SlXi1G9kYeQf;SSLMode=Require
  #   volumes:
  #     - ./API:/app
  #   networks:
  #     - local
  #   depends_on:
  #     - postgres

  mssqledge:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: mssqledge
    environment:
      ACCEPT_EULA: "1"
      MSSQL_SA_PASSWORD: "Password@1"
    ports:
      - "1435:1433"
    volumes:
      - mssqledge-data:/var/opt/mssql
    networks:
      - local
      
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_DATABASE: "defaultdb"
      MYSQL_USER: 'mysql'
      MYSQL_PASSWORD: 'mysql'
      MYSQL_ROOT_PASSWORD: 'root'
      LANG: C.UTF-8
      # LC_ALL: C.UTF-8
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-conf:/etc/mysql/conf.d
    command: ['mysqld', '--max_allowed_packet=1073741824', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    healthcheck:
      test: [ "CMD", "mysql", "-u", "root", "-root", "--execute", "SHOW DATABASES;" ]
      interval: 3s
      retries: 5
      timeout: 5s
    networks:
      - local
      
  postgres:
    image: postgres
    container_name: postgres
    shm_size: 128mb
    environment:
      POSTGRES_DB: "monkey"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - local
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRE: 'False'
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - local
    depends_on:
      - postgres
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - local

  redis-insight:
    image: redislabs/redisinsight
    container_name: redis-insight
    ports:
      - 5540:5540
    volumes:
      - redis-insight:/data
    networks:
      - local
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-conf:/etc/rabbitmq/rabbitmq.config
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - local
      
volumes:
  mssqledge-data:
  mysql-data:
  mysql-conf:
  postgres-data:
  pgadmin:
  redis-data:
  redis-conf:
  redis-insight:
  rabbitmq-data:
  rabbitmq-conf:
  
networks:
  local:
    driver: bridge

# docker-compose up -d